# Generated by Django 4.2.21 on 2025-06-03 20:35

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="UserLocationPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "preferred_machine_types",
                    models.JSONField(
                        default=list, help_text="User's preferred machine types"
                    ),
                ),
                (
                    "preferred_radius",
                    models.IntegerField(
                        choices=[
                            (5, "5 miles"),
                            (10, "10 miles"),
                            (15, "15 miles"),
                            (20, "20 miles"),
                            (25, "25 miles"),
                            (30, "30 miles"),
                            (40, "40 miles"),
                        ],
                        default=10,
                        help_text="Default search radius",
                    ),
                ),
                (
                    "preferred_building_types",
                    models.JSONField(
                        default=list, help_text="Preferred building types for searches"
                    ),
                ),
                (
                    "excluded_categories",
                    models.JSONField(
                        default=list, help_text="Categories to exclude from searches"
                    ),
                ),
                (
                    "minimum_rating",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Minimum Google rating filter",
                        max_digits=3,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "require_contact_info",
                    models.BooleanField(
                        default=True,
                        help_text="Only show locations with contact information",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="location_preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Location Preference",
                "verbose_name_plural": "User Location Preferences",
            },
        ),
        migrations.CreateModel(
            name="SearchHistory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "zip_code",
                    models.CharField(
                        help_text="ZIP code for search center", max_length=10
                    ),
                ),
                (
                    "radius",
                    models.IntegerField(
                        choices=[
                            (5, "5 miles"),
                            (10, "10 miles"),
                            (15, "15 miles"),
                            (20, "20 miles"),
                            (25, "25 miles"),
                            (30, "30 miles"),
                            (40, "40 miles"),
                        ],
                        default=10,
                        help_text="Search radius in miles",
                    ),
                ),
                (
                    "machine_type",
                    models.CharField(
                        choices=[
                            ("snack_machine", "Snack Machine"),
                            ("drink_machine", "Drink Machine"),
                            ("claw_machine", "Claw Machine"),
                            ("hot_food_kiosk", "Hot Food Kiosk"),
                            ("ice_cream_machine", "Ice Cream Machine"),
                            ("coffee_machine", "Coffee Machine"),
                            ("combo_machine", "Combo Snack/Drink Machine"),
                            ("healthy_snack_machine", "Healthy Snack Machine"),
                            ("fresh_food_machine", "Fresh Food Machine"),
                            ("toy_machine", "Toy/Prize Machine"),
                        ],
                        help_text="Type of vending machine",
                        max_length=30,
                    ),
                ),
                (
                    "building_types_filter",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Optional filter for specific building types",
                    ),
                ),
                (
                    "results_count",
                    models.IntegerField(
                        default=0,
                        help_text="Number of results returned for this search",
                    ),
                ),
                (
                    "search_parameters",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional search parameters",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="search_history",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Search History",
                "verbose_name_plural": "Search Histories",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="LocationData",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(help_text="Business name", max_length=255)),
                (
                    "category",
                    models.CharField(
                        blank=True, help_text="OSM-derived category", max_length=100
                    ),
                ),
                (
                    "detailed_category",
                    models.CharField(
                        blank=True,
                        help_text="Google Places derived category",
                        max_length=100,
                    ),
                ),
                ("address", models.TextField(help_text="Full address")),
                (
                    "latitude",
                    models.DecimalField(
                        decimal_places=6, help_text="Latitude coordinate", max_digits=9
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        decimal_places=6, help_text="Longitude coordinate", max_digits=9
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, help_text="Business phone number", max_length=20
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, help_text="Business email address", max_length=254
                    ),
                ),
                ("website", models.URLField(blank=True, help_text="Business website")),
                (
                    "business_hours_text",
                    models.TextField(
                        blank=True, help_text="Business hours in text format"
                    ),
                ),
                (
                    "google_place_id",
                    models.CharField(
                        db_index=True,
                        help_text="Google Places API place ID",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "google_rating",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Google rating (0-5)",
                        max_digits=3,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "google_user_ratings_total",
                    models.IntegerField(
                        blank=True,
                        help_text="Total number of Google reviews",
                        null=True,
                    ),
                ),
                (
                    "google_business_status",
                    models.CharField(
                        choices=[
                            ("operational", "Operational"),
                            ("closed_temporarily", "Closed Temporarily"),
                            ("closed_permanently", "Closed Permanently"),
                            ("unknown", "Unknown"),
                        ],
                        default="unknown",
                        help_text="Business operational status",
                        max_length=30,
                    ),
                ),
                ("maps_url", models.URLField(blank=True, help_text="Google Maps URL")),
                (
                    "foot_traffic_estimate",
                    models.CharField(
                        choices=[
                            ("very_low", "Very Low"),
                            ("low", "Low"),
                            ("moderate", "Moderate"),
                            ("high", "High"),
                            ("very_high", "Very High"),
                        ],
                        default="moderate",
                        help_text="Estimated foot traffic level",
                        max_length=20,
                    ),
                ),
                (
                    "google_popular_times_summary",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Popular times data from Google",
                    ),
                ),
                (
                    "osm_data",
                    models.JSONField(
                        blank=True, default=dict, help_text="Raw OpenStreetMap data"
                    ),
                ),
                (
                    "google_data",
                    models.JSONField(
                        blank=True, default=dict, help_text="Raw Google Places data"
                    ),
                ),
                (
                    "priority_score",
                    models.IntegerField(
                        default=0, help_text="Priority score for lead ranking"
                    ),
                ),
                (
                    "contact_completeness",
                    models.CharField(
                        choices=[
                            ("both", "Phone & Email"),
                            ("phone_only", "Phone Only"),
                            ("email_only", "Email Only"),
                            ("none", "No Contact Info"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "search_history",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="locations",
                        to="locator.searchhistory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Location Data",
                "verbose_name_plural": "Location Data",
                "ordering": ["-priority_score", "name"],
            },
        ),
        migrations.CreateModel(
            name="ExcludedLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "google_place_id",
                    models.CharField(
                        db_index=True,
                        help_text="Google Places ID of excluded location",
                        max_length=255,
                    ),
                ),
                (
                    "location_name",
                    models.CharField(
                        help_text="Name of the excluded location", max_length=255
                    ),
                ),
                (
                    "reason",
                    models.CharField(
                        choices=[
                            ("already_contacted", "Already Contacted"),
                            ("not_interested", "Not Interested"),
                            ("poor_location", "Poor Location"),
                            ("closed", "Business Closed"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=50,
                    ),
                ),
                ("notes", models.TextField(blank=True, help_text="Additional notes")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="excluded_locations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Excluded Location",
                "verbose_name_plural": "Excluded Locations",
            },
        ),
        migrations.AddIndex(
            model_name="searchhistory",
            index=models.Index(
                fields=["user", "created_at"], name="locator_sea_user_id_1ae457_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="searchhistory",
            index=models.Index(
                fields=["zip_code", "created_at"], name="locator_sea_zip_cod_c90c9c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="searchhistory",
            index=models.Index(
                fields=["machine_type", "created_at"],
                name="locator_sea_machine_fb98a1_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="locationdata",
            index=models.Index(
                fields=["search_history", "priority_score"],
                name="locator_loc_search__b4d1c6_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="locationdata",
            index=models.Index(
                fields=["google_place_id"], name="locator_loc_google__dc5f59_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="locationdata",
            index=models.Index(
                fields=["contact_completeness"], name="locator_loc_contact_e8519a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="locationdata",
            index=models.Index(
                fields=["foot_traffic_estimate"], name="locator_loc_foot_tr_e6e6c4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="locationdata",
            index=models.Index(
                fields=["latitude", "longitude"], name="locator_loc_latitud_eedfd2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="excludedlocation",
            index=models.Index(
                fields=["user", "google_place_id"],
                name="locator_exc_user_id_eb5cac_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="excludedlocation", unique_together={("user", "google_place_id")},
        ),
    ]
