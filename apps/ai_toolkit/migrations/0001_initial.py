# Generated by Django 4.2.21 on 2025-06-03 21:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ScriptTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(help_text="Template name", max_length=200)),
                (
                    "script_type",
                    models.CharField(
                        choices=[
                            ("cold_call", "Cold Call Script"),
                            ("email", "Email Template"),
                            ("in_person", "In-Person Script"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "machine_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("snack_machine", "Snack Machine"),
                            ("drink_machine", "Drink Machine"),
                            ("claw_machine", "Claw Machine"),
                            ("hot_food_kiosk", "Hot Food Kiosk"),
                            ("ice_cream_machine", "Ice Cream Machine"),
                            ("coffee_machine", "Coffee Machine"),
                            ("combo_machine", "Combo Snack/Drink Machine"),
                            ("healthy_snack_machine", "Healthy Snack Machine"),
                            ("fresh_food_machine", "Fresh Food Machine"),
                            ("toy_machine", "Toy/Prize Machine"),
                        ],
                        help_text="Specific machine type, or blank for general use",
                        max_length=30,
                    ),
                ),
                (
                    "location_category",
                    models.CharField(
                        blank=True, help_text="Target location category", max_length=100
                    ),
                ),
                (
                    "content",
                    models.TextField(help_text="Template content with placeholders"),
                ),
                (
                    "is_premium",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this template requires a paid subscription",
                    ),
                ),
                (
                    "usage_count",
                    models.IntegerField(
                        default=0,
                        help_text="Number of times this template has been used",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Script Template",
                "verbose_name_plural": "Script Templates",
                "ordering": ["script_type", "name"],
                "indexes": [
                    models.Index(
                        fields=["script_type", "is_active"],
                        name="ai_toolkit__script__a1fe24_idx",
                    ),
                    models.Index(
                        fields=["is_premium"], name="ai_toolkit__is_prem_cb1405_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="JarvisConversation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "session_id",
                    models.CharField(
                        help_text="Session identifier for grouping related messages",
                        max_length=100,
                    ),
                ),
                ("user_message", models.TextField(help_text="User's input message")),
                ("jarvis_response", models.TextField(help_text="JARVIS AI response")),
                (
                    "conversation_type",
                    models.CharField(
                        choices=[
                            ("general", "General Chat"),
                            ("script_generation", "Script Generation"),
                            ("business_advice", "Business Advice"),
                            ("logo_generation", "Logo Generation"),
                            ("social_media", "Social Media Content"),
                        ],
                        default="general",
                        max_length=50,
                    ),
                ),
                ("ai_model_used", models.CharField(blank=True, max_length=50)),
                (
                    "response_time_ms",
                    models.IntegerField(
                        blank=True, help_text="Response time in milliseconds", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="jarvis_conversations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "JARVIS Conversation",
                "verbose_name_plural": "JARVIS Conversations",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "session_id"],
                        name="ai_toolkit__user_id_a8b33d_idx",
                    ),
                    models.Index(
                        fields=["conversation_type"],
                        name="ai_toolkit__convers_a0caa4_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="ai_toolkit__created_0cff99_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="GeneratedScript",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "script_type",
                    models.CharField(
                        choices=[
                            ("cold_call", "Cold Call Script"),
                            ("email", "Email Template"),
                            ("in_person", "In-Person Script"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "target_location_name",
                    models.CharField(
                        help_text="Name of the target business/location", max_length=255
                    ),
                ),
                (
                    "target_location_category",
                    models.CharField(
                        blank=True,
                        help_text="Category of the target location (e.g., Restaurant, Office)",
                        max_length=100,
                    ),
                ),
                (
                    "target_machine_type",
                    models.CharField(
                        choices=[
                            ("snack_machine", "Snack Machine"),
                            ("drink_machine", "Drink Machine"),
                            ("claw_machine", "Claw Machine"),
                            ("hot_food_kiosk", "Hot Food Kiosk"),
                            ("ice_cream_machine", "Ice Cream Machine"),
                            ("coffee_machine", "Coffee Machine"),
                            ("combo_machine", "Combo Snack/Drink Machine"),
                            ("healthy_snack_machine", "Healthy Snack Machine"),
                            ("fresh_food_machine", "Fresh Food Machine"),
                            ("toy_machine", "Toy/Prize Machine"),
                        ],
                        help_text="Type of vending machine for this location",
                        max_length=30,
                    ),
                ),
                (
                    "script_content",
                    models.TextField(help_text="The generated script content"),
                ),
                (
                    "is_template",
                    models.BooleanField(
                        default=False, help_text="Whether this is a pre-made template"
                    ),
                ),
                (
                    "regeneration_count",
                    models.IntegerField(
                        default=0,
                        help_text="Number of times this script has been regenerated",
                    ),
                ),
                (
                    "ai_model_used",
                    models.CharField(
                        blank=True,
                        help_text="AI model used to generate this script",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="generated_scripts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Generated Script",
                "verbose_name_plural": "Generated Scripts",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "script_type"],
                        name="ai_toolkit__user_id_eb0b46_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="ai_toolkit__created_1d6d01_idx"
                    ),
                    models.Index(
                        fields=["is_template"], name="ai_toolkit__is_temp_77629f_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="BusinessCalculation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "calculation_type",
                    models.CharField(
                        choices=[
                            ("lead_value_estimator", "Lead Value Estimator"),
                            ("snack_price_calculator", "Snack Price Calculator"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "input_parameters",
                    models.JSONField(
                        help_text="Input parameters used for the calculation"
                    ),
                ),
                (
                    "calculation_results",
                    models.JSONField(help_text="Results of the calculation"),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="User notes about this calculation"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="business_calculations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Business Calculation",
                "verbose_name_plural": "Business Calculations",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "calculation_type"],
                        name="ai_toolkit__user_id_98142d_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="ai_toolkit__created_9be18f_idx"
                    ),
                ],
            },
        ),
    ]
