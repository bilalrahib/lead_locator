# Generated by Django 4.2.21 on 2025-06-03 16:41

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Email address (used for login)",
                        max_length=254,
                        unique=True,
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        help_text="Phone number",
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                (
                    "failed_login_attempts",
                    models.IntegerField(
                        default=0,
                        help_text="Number of consecutive failed login attempts",
                    ),
                ),
                (
                    "is_locked",
                    models.BooleanField(
                        default=False,
                        help_text="Account locked due to failed login attempts",
                    ),
                ),
                (
                    "lock_expires_at",
                    models.DateTimeField(
                        blank=True, help_text="When account lock expires", null=True
                    ),
                ),
                (
                    "last_login_ip",
                    models.GenericIPAddressField(
                        blank=True, help_text="IP address of last login", null=True
                    ),
                ),
                (
                    "email_verified",
                    models.BooleanField(
                        default=False, help_text="Email address has been verified"
                    ),
                ),
                (
                    "email_verification_token",
                    models.CharField(
                        blank=True,
                        help_text="Token for email verification",
                        max_length=100,
                    ),
                ),
                (
                    "email_verification_sent_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When verification email was sent",
                        null=True,
                    ),
                ),
                (
                    "password_reset_token",
                    models.CharField(
                        blank=True, help_text="Token for password reset", max_length=100
                    ),
                ),
                (
                    "password_reset_expires_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When password reset token expires",
                        null=True,
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        help_text="Profile picture",
                        null=True,
                        upload_to="avatars/",
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True, help_text="Short bio or description", max_length=500
                    ),
                ),
                (
                    "company_name",
                    models.CharField(
                        blank=True, help_text="Company or business name", max_length=100
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        blank=True, help_text="Personal or company website"
                    ),
                ),
                (
                    "email_notifications",
                    models.BooleanField(
                        default=True, help_text="Receive email notifications"
                    ),
                ),
                (
                    "marketing_emails",
                    models.BooleanField(
                        default=False, help_text="Receive marketing emails"
                    ),
                ),
                (
                    "timezone_preference",
                    models.CharField(
                        default="UTC",
                        help_text="User's preferred timezone",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "last_activity",
                    models.DateTimeField(
                        blank=True, help_text="Last user activity timestamp", null=True
                    ),
                ),
            ],
            options={"verbose_name": "User", "verbose_name_plural": "Users",},
            managers=[("objects", django.contrib.auth.models.UserManager()),],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "business_type",
                    models.CharField(
                        choices=[
                            ("individual", "Individual Operator"),
                            ("small_business", "Small Business"),
                            ("large_business", "Large Business"),
                            ("consultant", "Consultant/Agency"),
                            ("other", "Other"),
                        ],
                        default="individual",
                        help_text="Type of business",
                        max_length=50,
                    ),
                ),
                (
                    "years_in_business",
                    models.IntegerField(
                        blank=True, help_text="Years in vending business", null=True
                    ),
                ),
                (
                    "number_of_machines",
                    models.IntegerField(
                        blank=True, help_text="Current number of machines", null=True
                    ),
                ),
                (
                    "target_locations",
                    models.TextField(
                        blank=True, help_text="Types of locations you target"
                    ),
                ),
                ("address_line1", models.CharField(blank=True, max_length=255)),
                ("address_line2", models.CharField(blank=True, max_length=255)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("state", models.CharField(blank=True, max_length=50)),
                ("zip_code", models.CharField(blank=True, max_length=10)),
                ("country", models.CharField(default="US", max_length=50)),
                (
                    "linkedin_url",
                    models.URLField(blank=True, help_text="LinkedIn profile"),
                ),
                (
                    "twitter_url",
                    models.URLField(blank=True, help_text="Twitter profile"),
                ),
                (
                    "facebook_url",
                    models.URLField(blank=True, help_text="Facebook page"),
                ),
                (
                    "preferred_contact_method",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("phone", "Phone"),
                            ("sms", "SMS"),
                        ],
                        default="email",
                        max_length=20,
                    ),
                ),
                (
                    "profile_completed",
                    models.BooleanField(
                        default=False, help_text="Profile completion status"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Profile",
                "verbose_name_plural": "User Profiles",
            },
        ),
        migrations.CreateModel(
            name="UserActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("login", "Login"),
                            ("logout", "Logout"),
                            ("password_change", "Password Change"),
                            ("email_change", "Email Change"),
                            ("profile_update", "Profile Update"),
                            ("subscription_change", "Subscription Change"),
                            ("search_performed", "Search Performed"),
                            ("script_generated", "Script Generated"),
                            ("support_ticket", "Support Ticket Created"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Activity description"),
                ),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                (
                    "metadata",
                    models.JSONField(
                        blank=True, default=dict, help_text="Additional activity data"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activities",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Activity",
                "verbose_name_plural": "User Activities",
                "ordering": ["-created_at"],
            },
        ),
    ]
